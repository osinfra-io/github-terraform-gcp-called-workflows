name: Plan and Apply Called Workflow

on:
  workflow_call:
    inputs:
      checkout_ref:
        required: true
        type: string
      github_environment:
        required: true
        type: string
      service_account:
        required: true
        type: string
      opentofu_version:
        required: true
        type: string
      opentofu_plan_args:
        required: false
        type: string
      opentofu_state_bucket:
        required: true
        type: string
      opentofu_workspace:
        required: true
        type: string
      working_directory:
        required: false
        type: string
        default: .
      workload_identity_provider:
        required: true
        type: string

    secrets:
      gpg_passphrase:
        required: true

      # Uncomment if you have private modules

      # ssh_key:
      #   required: true

      opentofu_plan_secret_args:
        required: false

permissions:
  contents: read
  id-token: write

# If you use private modules you'll need this env variable to use
# the same ssh-agent socket value across all jobs & steps.

# env:
#  SSH_AUTH_SOCK: /tmp/ssh_agent.sock

jobs:
  plan:
    name: OpenTofu plan
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ${{ inputs.working_directory }}

    steps:
      # GitHub - Cache
      # https://github.com/marketplace/actions/cache

      - name: Setup cache
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809
        with:
          path: |
            ${{ inputs.working_directory }}/.terraform
            ${{ inputs.working_directory }}/.terraform.lock.hcl
            ${{ inputs.working_directory }}/plan.out.gpg
          key: ${{ inputs.opentofu_workspace }}-${{ github.run_id }}-${{ github.run_attempt }}


      # GitHub - Checkout
      # https://github.com/marketplace/actions/checkout

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          ref: ${{ inputs.checkout_ref }}

      # Google Cloud Platform - Authenticate to Google Cloud
      # https://github.com/marketplace/actions/authenticate-to-google-cloud

      - name: Authenticate
        uses: google-github-actions/auth@b7593ed2efd1c1617e1b0254da33b86225adb2a5
        with:
          create_credentials_file: true
          service_account: ${{ inputs.service_account }}
          workload_identity_provider: ${{ inputs.workload_identity_provider }}

      # GitHub - Setup SSH for private module access
      # Uncomment if you have private modules

      # - name: Private module access
      #   run: |
      #     ssh-agent -a $SSH_AUTH_SOCK
      #     mkdir -p ~/.ssh
      #     echo "${{ secrets.ssh_key }}" | tr -d '\r' | ssh-add -
      #     ssh-keyscan github.com >> ~/.ssh/known_hosts

      # Setup OpenTofu
      # https://github.com/marketplace/actions/opentofu-setup-tofu

      - name: OpenTofu setup
        uses: opentofu/setup-opentofu@592200bd4b9bbf4772ace78f887668b1aee8f716 # v1.0.5
        with:
          tofu_version: ${{ inputs.opentofu_version }}

      - name: OpenTofu format
        run: tofu fmt -check -diff

      - name: OpenTofu initialize
        run: tofu init -backend-config="bucket=${{ inputs.opentofu_state_bucket }}"

      - name: OpenTofu workspace
        run: >-
          tofu workspace select -or-create ${{ inputs.opentofu_workspace }}

      - name: OpenTofu validate
        run: tofu validate

      - name: OpenTofu plan
        id: plan
        run: |
          tofu plan -detailed-exitcode -input=false -out=plan.out ${{ inputs.opentofu_plan_args}} ${{ secrets.opentofu_plan_secret_args }}

      - name: OpenTofu show
        id: show
        run: tofu show -no-color plan.out

      - name: OpenTofu summary
        continue-on-error: true
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea
        env:
          TEST_STDOUT: ${{ steps.show.outputs.stdout }}
        with:
          script: |
            const testResults = process.env.TEST_STDOUT || 'No output available.';
            core.summary
              .addCodeBlock(testResults, 'hcl')
              .write();

      # Encrypt - OpenTofu plan.out

      # If your plan includes any sort of sensitive data, even if obscured in OpenTofu's terminal output,
      # it will be saved in cleartext in the plan file. You should therefore treat any saved plan files as
      # potentially-sensitive artifacts.

      - name: Encrypt
        if: steps.plan.outputs.exitcode == 2
        run: gpg --quiet --batch --yes --passphrase ${{ secrets.gpg_passphrase }} --symmetric --cipher-algo AES256 plan.out

    outputs:
      plan-exit-code: ${{ steps.plan.outputs.exitcode }}

  apply:
    name: OpenTofu apply
    needs: plan
    if: needs.plan.outputs.plan-exit-code == 2
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.github_environment }}

    defaults:
      run:
        working-directory: ${{ inputs.working_directory }}

    steps:
      # GitHub - Checkout
      # https://github.com/marketplace/actions/checkout

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ inputs.checkout_ref }}

      # Google Cloud Platform - Authenticate to Google Cloud
      # https://github.com/marketplace/actions/authenticate-to-google-cloud

      - name: Authenticate
        uses: google-github-actions/auth@b7593ed2efd1c1617e1b0254da33b86225adb2a5
        with:
          create_credentials_file: true
          service_account: ${{ inputs.service_account }}
          workload_identity_provider: ${{ inputs.workload_identity_provider }}

      # GitHub - Setup SSH for private module access
      # Uncomment if you have private modules

      # - name: Private module access
      #   run: |
      #     ssh-agent -a $SSH_AUTH_SOCK
      #     mkdir -p ~/.ssh
      #     echo "${{ secrets.ssh_key }}" | tr -d '\r' | ssh-add -
      #     ssh-keyscan github.com >> ~/.ssh/known_hosts

      # GitHub - Cache
      # https://github.com/marketplace/actions/cache

      - name: Restore cache
        uses: actions/cache/restore@0400d5f644dc74513175e3cd8d07132dd4860809
        with:
          path: |
            ${{ inputs.working_directory }}/.terraform
            ${{ inputs.working_directory }}/.terraform.lock.hcl
            ${{ inputs.working_directory }}/plan.out.gpg
          key: ${{ inputs.opentofu_workspace }}-${{ github.run_id }}-${{ github.run_attempt }}

      # Decrypt - OpenTofu plan.out

      - name: Decrypt
        run: gpg --quiet --batch --yes --passphrase ${{ secrets.gpg_passphrase }} --output plan.out plan.out.gpg

      # Setup OpenTofu
      # https://github.com/marketplace/actions/opentofu-setup-tofu

      - name: OpenTofu setup
        uses: opentofu/setup-opentofu@592200bd4b9bbf4772ace78f887668b1aee8f716 # v1.0.5
        with:
          tofu_version: ${{ inputs.opentofu_version }}

      - name: OpenTofu apply
        id: apply
        run: tofu apply -no-color plan.out

      - name: OpenTofu summary
        continue-on-error: true
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea
        env:
          TEST_STDOUT: ${{ steps.apply.outputs.stdout }}
        with:
          script: |
            const testResults = process.env.TEST_STDOUT || 'No output available.';
            core.summary
              .addCodeBlock(testResults, 'hcl')
              .write();
